{"version":3,"file":"static/js/539.f10f647f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/contacts/ContactList.styles.js","components/contacts/ContactList.js","components/filter/Filter.styles.js","components/filter/Filter.jsx","components/form/ContactForm.styles.js","components/form/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  max-width: calc(100% - 20px);\n  padding: 10px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  font-weight: 500;\n  margin-bottom: 4px;\n`;\n\nexport const ContactText = styled.p`\n  font-size: 20px;\n`;\n\nexport const ContactDelete = styled.button`\n  color: black;\n  margin-left: 15px;\n  border: none;\n  border-radius: 5px;\n  height: 35px;\n  border: none;\n  font-size: 10px;\n  display: flex;\n  align-items: center;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 255, 255);\n    background-color: black;\n    cursor: pointer;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\nimport { IoClose } from 'react-icons/io5';\nimport {\n  ContactsList,\n  ContactItem,\n  ContactText,\n  ContactDelete,\n} from './ContactList.styles';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = evt => {\n    dispatch(deleteContact(evt.currentTarget.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <ContactsList>\n      {visibilityContacts.map(contact => (\n        <ContactItem key={contact.id}>\n          <ContactText>\n            {contact.name}: <span>{contact.number}</span>\n          </ContactText>\n          <ContactDelete type=\"button\" id={contact.id} onClick={handleDelete}>\n            <IoClose />\n          </ContactDelete>\n        </ContactItem>\n      ))}\n    </ContactsList>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  padding: 10px;\n  font-size: 25px;\n\n  input {\n    padding: 8px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterLabel } from './Filter.styles';\nimport { setFilterContacts } from '../../redux/contacts/filtersSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handlerFilter = evt => {\n    dispatch(setFilterContacts(evt.target.value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contact by name\n      <input type=\"text\" name=\"filter\" onChange={handlerFilter} />\n    </FilterLabel>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 600px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  input {\n    padding: 8px;\n  }\n`;\n\nexport const FormList = styled.ul`\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const FormListItem = styled.li`\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  p {\n    margin-right: 10px;\n    margin-bottom: 8px;\n    font-size: 25px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  border-radius: 5px;\n  height: 40px;\n  border: none;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 255, 255);\n    background-color: black;\n    cursor: pointer;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Form, FormList, FormListItem, FormButton } from './ContactForm.styles';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <Form onSubmit={handlerSubmit}>\n      <FormList>\n        <FormListItem>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormListItem>\n        <FormListItem>\n          <p>Contact</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormListItem>\n      </FormList>\n\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactList } from 'components/contacts/ContactList';\nimport { Filter } from 'components/filter/Filter';\nimport ContactForm from 'components/form/ContactForm';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <InfinitySpin width=\"200\" color=\"#4fa94d\" />}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContactsList","styled","_templateObject","_taggedTemplateLiteral","ContactItem","_templateObject2","ContactText","_templateObject3","ContactDelete","_templateObject4","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","handleDelete","evt","deleteContact","currentTarget","id","visibilityContacts","contact","name","includes","_jsx","children","map","_jsxs","number","type","onClick","IoClose","FilterLabel","Filter","onChange","setFilterContacts","target","value","Form","FormList","FormListItem","FormButton","_templateObject5","onSubmit","preventDefault","form","find","toast","concat","addContact","reset","pattern","title","required","useEffect","fetchContacts","ContactForm","InfinitySpin","width","color"],"sourceRoot":""}